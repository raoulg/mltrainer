
[project]
name = "mltrainer"
version = "0.2"
description = "toolkit for training pytorch models"

authors = [
    {name = "R.Grouls", email = "Raoul.Grouls@han.nl"},
]

requires-python = ">=3.11,<=3.12"
readme = "README.md"
license = {text = "MIT"}

classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Programming Language :: Python",
    "Typing :: Typed",
]

dependencies = [
    "loguru>=0.7.0",
    "mlflow>=2.4.1",
    "numpy>=1.25.0",
    "pydantic>=1.10.9",
    "pytest-cov>=6.0.0",
    "ray[tune]>=2.5.1",
    "tensorboard>=2.18.0",
    "tomlserializer>=0.1.0",
    "torch>=2.0.1",
    "torch-tb-profiler>=0.4.1",
    "torchvision>=0.15.2",
    "tqdm>=4.65.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/mltrainer"]

[tools.urls]
GitHub = "https://github.com/raoulg/mltrainer"

[dependency-groups]
dev = [
    "isort>=5.13.2",
    "mypy>=1.14.1",
    "pytest>=8.3.4",
    "ruff>=0.9.2",
]

[tool.mypy]
ignore_missing_imports = true
strict_optional = true
warn_unreachable = true
pretty = true

[tool.pytest.ini_options]
	filterwarnings = [
    "ignore::pydantic.PydanticDeprecatedSince20"
]
addopts = "-ra -v --cov=mltrainer --cov-report=term-missing"
testpaths = ["tests"]
markers = [
    "tensorboard: marks tests that use tensorboard functionality",
]

[tool.coverage.run]
source = ["mltrainer"]
omit = [
    "tests/*",
    "**/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "\\.\\.\\.",
]
show_missing = true
skip_empty = true
